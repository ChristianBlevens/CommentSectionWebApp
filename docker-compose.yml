version: '3.8'

services:
  # PostgreSQL databases
  postgres-comments:
    image: postgres:15-alpine
    container_name: comment-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-comments_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    volumes:
      - postgres-comments-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - comment-network

  postgres-moderation:
    image: postgres:15-alpine
    container_name: moderation-postgres
    environment:
      POSTGRES_DB: ${MODERATION_DB_NAME:-moderation_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    volumes:
      - postgres-moderation-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - comment-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: comment-redis
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - comment-network

  # Backend API service
  backend-api:
    build: ./backend/api
    container_name: comment-backend-api
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${API_PORT:-3000}
      DB_HOST: postgres-comments
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-comments_db}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      MODERATION_API_URL: ${MODERATION_API_URL:-http://moderation-service:3001}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      DISCORD_REDIRECT_URI: ${DISCORD_REDIRECT_URI:-http://localhost:8080/oauth-callback.html}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:8080}
    ports:
      - "${API_PORT:-3000}:${API_PORT:-3000}"
    depends_on:
      postgres-comments:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - comment-network

  # Moderation service
  moderation-service:
    build: ./backend/moderation
    container_name: comment-moderation-service
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${MODERATION_PORT:-3001}
      DB_HOST: postgres-moderation
      DB_PORT: 5432
      DB_NAME: ${MODERATION_DB_NAME:-moderation_db}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      ADMIN_KEY: ${ADMIN_KEY:-change_this_admin_key}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:8080}
    ports:
      - "${MODERATION_PORT:-3001}:${MODERATION_PORT:-3001}"
    depends_on:
      postgres-moderation:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - comment-network

  # Frontend web server
  frontend:
    image: nginx:alpine
    container_name: comment-frontend
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    depends_on:
      - backend-api
      - moderation-service
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - comment-network

volumes:
  postgres-comments-data:
  postgres-moderation-data:

networks:
  comment-network:
    driver: bridge